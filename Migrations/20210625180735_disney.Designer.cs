// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.NET.Data;

namespace api.NET.Migrations
{
    [DbContext(typeof(DisneyDbContext))]
    [Migration("20210625180735_disney")]
    partial class disney
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("PeliculaPersonaje", b =>
                {
                    b.Property<int>("PeliculasIdPelicula")
                        .HasColumnType("int");

                    b.Property<int>("PersonajesIdPersonaje")
                        .HasColumnType("int");

                    b.HasKey("PeliculasIdPelicula", "PersonajesIdPersonaje");

                    b.HasIndex("PersonajesIdPersonaje");

                    b.ToTable("PeliculaPersonaje");
                });

            modelBuilder.Entity("api.NET.Data.Genero", b =>
                {
                    b.Property<int>("IdGenero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdPelicula")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("IdGenero");

                    b.HasIndex("IdPelicula")
                        .IsUnique();

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("api.NET.Data.Pelicula", b =>
                {
                    b.Property<int>("IdPelicula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Calificacion")
                        .HasColumnType("int");

                    b.Property<DateTime>("Creacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Imagen")
                        .HasColumnType("longtext");

                    b.Property<string>("Titulo")
                        .HasColumnType("longtext");

                    b.HasKey("IdPelicula");

                    b.ToTable("Peliculas");
                });

            modelBuilder.Entity("api.NET.Data.Personaje", b =>
                {
                    b.Property<int>("IdPersonaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Historia")
                        .HasColumnType("longtext");

                    b.Property<string>("Imagen")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<float>("Peso")
                        .HasColumnType("float");

                    b.HasKey("IdPersonaje");

                    b.ToTable("Personajes");
                });

            modelBuilder.Entity("PeliculaPersonaje", b =>
                {
                    b.HasOne("api.NET.Data.Pelicula", null)
                        .WithMany()
                        .HasForeignKey("PeliculasIdPelicula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.NET.Data.Personaje", null)
                        .WithMany()
                        .HasForeignKey("PersonajesIdPersonaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api.NET.Data.Genero", b =>
                {
                    b.HasOne("api.NET.Data.Pelicula", "Peliculas")
                        .WithOne("Generos")
                        .HasForeignKey("api.NET.Data.Genero", "IdPelicula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Peliculas");
                });

            modelBuilder.Entity("api.NET.Data.Pelicula", b =>
                {
                    b.Navigation("Generos");
                });
#pragma warning restore 612, 618
        }
    }
}
